version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: ankane/pgvector:v0.5.1
    environment:
      POSTGRES_DB: grant_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/web/src/api/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Web application (React + Node.js API)
  web:
    build:
      context: ./packages/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=grant_platform
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai:8001
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - VITE_COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET=${S3_BUCKET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/web:/app
      - /app/node_modules
    command: npm run dev

  # AI Service (FastAPI)
  ai:
    build:
      context: ./packages/ai
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=grant_platform
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4
      - EMBEDDING_MODEL=text-embedding-3-small
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/ai:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: grant-platform-network